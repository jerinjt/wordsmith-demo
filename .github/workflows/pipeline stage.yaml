name: CI-CD-Stage

on:
  workflow_dispatch:
  push:
    tags: # e.g., v1.2.3
    - 'stage[0-9]+.[0-9]+.[0-9]+'

env:
  OCI_CLI_USER: ${{ secrets.OCI_CLI_USER }}
  OCI_CLI_TENANCY: ${{ secrets.OCI_CLI_TENANCY }}
  OCI_CLI_FINGERPRINT: ${{ secrets.OCI_CLI_FINGERPRINT }}
  OCI_CLI_KEY_CONTENT: ${{ secrets.OCI_CLI_KEY_CONTENT }}
  OCI_CLI_REGION: ${{ secrets.OCI_CLI_REGION }}

jobs:

  push_to_registry:
    if: ${{ github.event_name != 'pull_request' }}
    name: Push Docker image to Docker Hub
    runs-on: ubuntu-latest
    permissions:
      packages: write
      contents: read
      attestations: write
      id-token: write
    steps:
      - name: Check out the repo
        uses: actions/checkout@v4

      - name: Log in to Docker Hub
        uses: docker/login-action@f4ef78c080cd8ba55a85445d5b36e214a81df20a
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Extract metadata (tags, labels) for API Docker
        id: meta
        uses: docker/metadata-action@9ec57ed1fcdbf14dcef7dfbe97b2010124a938b7
        with:
          images: shivin8080/demo-api
          tags: |
            type=match,pattern=stage(.*),group=1

      - name: Build and push Docker image API
        id: push
        uses: docker/build-push-action@3b5e8027fcad23fda98b2e3ac259d8d67585f671
        with:
          context: ./api
          file: ./api/Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

      - name: Extract metadata (tags, labels) for Web Docker
        id: web
        uses: docker/metadata-action@9ec57ed1fcdbf14dcef7dfbe97b2010124a938b7
        with:
          images: shivin8080/demo-web
          tags: |
            type=match,pattern=stage(.*),group=1

      - name: Build and push Docker image Web
        id: push-web
        uses: docker/build-push-action@3b5e8027fcad23fda98b2e3ac259d8d67585f671
        with:
          context: ./web
          file: ./web/Dockerfile
          push: true
          tags: ${{ steps.web.outputs.tags }}
          labels: ${{ steps.web.outputs.labels }}

  install-kubectl:
    if: ${{ github.event_name != 'pull_request' }}
    name: Install Kubectl for OKE
    runs-on: ubuntu-latest
    needs: push_to_registry
    steps:
      - name: Configure Kubectl
        uses: oracle-actions/configure-kubectl-oke@v1.5.0
        id: test-configure-kubectl-oke-action
        with:
          cluster: ${{ secrets.OKE_CLUSTER_OCID }}

      - name: Run Kubectl
        run: kubectl get nodes -A

      - name: Check out the repo
        uses: actions/checkout@v4
      
      - name: Helm deploy
        run: helm upgrade wordsmith-stage ./Helm/wordsmith --set-string web.tag=${{ fromJSON(steps.web.outputs.json).labels['org.opencontainers.image.version'] }} --set-string api.tag=${{ fromJSON(steps.meta.outputs.json).labels['org.opencontainers.image.version'] }} --namespace ws-stage --install --create-namespace
